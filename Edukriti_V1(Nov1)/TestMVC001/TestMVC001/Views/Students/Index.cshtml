@*@model IEnumerable<TestMVC001.Models.Student>*@
@model PagedList.IPagedList<TestMVC001.Models.Student>
@using PagedList
@using PagedList.Mvc;

@{
    ViewBag.Title = "Students";
}
<hr />
<p class="bold underline">
    @Html.ActionLink("Add New Student", "Create")
</p>

@using (Html.BeginForm("Index", "Students", FormMethod.Get))
{
    <p class="bold">
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" class="btn btn-primary btnStudentSearch"/>
    </p>
}


<table class="table manageTable" rules="all">
    <tr>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = "FirstName", currentSort = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().StudentMiddleName)
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = "LastName", currentSort = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Class)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Section)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().DateOfBirth)
        </th>
        <th>
            @Html.ActionLink("RFID", "Index", new { sortOrder = "RFID", currentSort = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.First().ParentFirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ParentMiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ParentLastName)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.First().ParentPrimaryPhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ParentHomePhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ParentEmailId)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.First().ORGID)
        </th>*@
        <th width="15%" class="action">
            @Html.DisplayName("Action")
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StudentFirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentMiddleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentLastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Class)
            </td>
            <td class="section">
                @Html.DisplayFor(modelItem => item.Section)
            </td>
            <td class="gender">
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RFID)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.ParentFirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentMiddleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentLastName)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.ParentPrimaryPhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentHomePhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentEmailId)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.ORGID)
            </td>*@
            <td width="15%" class="action">
                @Html.ActionLink("Edit", "Edit", new { id = item.StudentId }) | @Html.ActionLink("Details", "Details", new { id = item.StudentId }) | @Html.ActionLink("Delete", "Delete", new { id = item.StudentId })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))